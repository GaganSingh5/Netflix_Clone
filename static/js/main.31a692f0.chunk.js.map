{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","id","APIKEY","requests","fetchTreanding","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","console","log","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","viewBox","focusable","d","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31a692f0.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://api.themoviedb.org/3\",\r\n});\r\n\r\n\r\nexport default instance;","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css'\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    //  A snippet of code which runs based on a specific condition\r\n    // Any data we are using in the useEffect which is coming \r\n    //  from outside the scope needs to be added in the useEffects second\r\n    //  parameter. As these data is dependent and it will re-run the function.\r\n    useEffect(() => {\r\n        //  if [] second parameter, run once when the row loades, and never run again\r\n\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            // console.log(request);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    }, [fetchUrl])\r\n\r\n\r\n    // console.log(movies);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {/* Title */}\r\n            <h2>{title}</h2>\r\n\r\n\r\n            {/* Container -> Tiles */}\r\n            <div className=\"tiles_container\">\r\n                {/* for every tile */}\r\n\r\n                {movies.map(movie => (\r\n                    <img\r\n                    key={movie.id}\r\n                    className={`tile_poster ${isLargeRow && \"tile_poster_large\"}`} \r\n                    src={`${base_url}${isLargeRow ? movie.poster_path: movie.backdrop_path}`} alt={movie.name} />\r\n                ))}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row","const APIKEY = \"e79b1ff319751096dfbc114534f6d794\";\r\n\r\n\r\nconst requests = {\r\n    fetchTreanding: `/trending/all/week?api_key=${APIKEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${APIKEY}&with_network=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${APIKEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${APIKEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${APIKEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${APIKEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${APIKEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${APIKEY}&with_genres=99`,\r\n}\r\n\r\n\r\nexport default requests;","import React, { useEffect, useState } from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css'\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n    \r\n    \r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random() * request.data.results.length - 1)\r\n                ]\r\n            )\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    console.log(movie);\r\n\r\n    function truncate(str,n) {\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str; \r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n        style={{\r\n            backgroundSize:\"cover\",\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgroundPosition: \"center 5%\",\r\n            }}\r\n        >  {/* background Image */}\r\n            <div className=\"banner_contents\">\r\n                {/* title */}\r\n                <h1 className=\"banner_title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n                {/* div 2 buttons */}\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n                </div>\r\n\r\n                {/* description */}\r\n\r\n                <h1 className=\"banner_description\">\r\n                    { truncate(movie?.overview, 150)}\r\n                </h1>\r\n                \r\n            </div>\r\n            <div className=\"banner--fadeButton\"></div>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Banner","import React, { useEffect, useState } from 'react';\r\n// import axios from './axios';\r\n// import requests from './requests';\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if(window.scrollY > 100) {\r\n                handleShow(true);\r\n            } else {\r\n                handleShow(false);\r\n            }\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n            <svg className=\"nav_logo\" viewBox=\"0 0 111 30\" focusable=\"false\">\r\n                <g id=\"netflix-logo\">\r\n                    <path d=\"M105.06233,14.2806261 L110.999156,30 C109.249227,29.7497422 107.500234,29.4366857 105.718437,29.1554972 L102.374168,20.4686475 L98.9371075,28.4375293 C97.2499766,28.1563408 95.5928391,28.061674 93.9057081,27.8432843 L99.9372012,14.0931671 L94.4680851,-5.68434189e-14 L99.5313525,-5.68434189e-14 L102.593495,7.87421502 L105.874965,-5.68434189e-14 L110.999156,-5.68434189e-14 L105.06233,14.2806261 Z M90.4686475,-5.68434189e-14 L85.8749649,-5.68434189e-14 L85.8749649,27.2499766 C87.3746368,27.3437061 88.9371075,27.4055675 90.4686475,27.5930265 L90.4686475,-5.68434189e-14 Z M81.9055207,26.93692 C77.7186241,26.6557316 73.5307901,26.4064111 69.250164,26.3117443 L69.250164,-5.68434189e-14 L73.9366389,-5.68434189e-14 L73.9366389,21.8745899 C76.6248008,21.9373887 79.3120255,22.1557784 81.9055207,22.2804387 L81.9055207,26.93692 Z M64.2496954,10.6561065 L64.2496954,15.3435186 L57.8442216,15.3435186 L57.8442216,25.9996251 L53.2186709,25.9996251 L53.2186709,-5.68434189e-14 L66.3436123,-5.68434189e-14 L66.3436123,4.68741213 L57.8442216,4.68741213 L57.8442216,10.6561065 L64.2496954,10.6561065 Z M45.3435186,4.68741213 L45.3435186,26.2498828 C43.7810479,26.2498828 42.1876465,26.2498828 40.6561065,26.3117443 L40.6561065,4.68741213 L35.8121661,4.68741213 L35.8121661,-5.68434189e-14 L50.2183897,-5.68434189e-14 L50.2183897,4.68741213 L45.3435186,4.68741213 Z M30.749836,15.5928391 C28.687787,15.5928391 26.2498828,15.5928391 24.4999531,15.6875059 L24.4999531,22.6562939 C27.2499766,22.4678976 30,22.2495079 32.7809542,22.1557784 L32.7809542,26.6557316 L19.812541,27.6876933 L19.812541,-5.68434189e-14 L32.7809542,-5.68434189e-14 L32.7809542,4.68741213 L24.4999531,4.68741213 L24.4999531,10.9991564 C26.3126816,10.9991564 29.0936358,10.9054269 30.749836,10.9054269 L30.749836,15.5928391 Z M4.78114163,12.9684132 L4.78114163,29.3429562 C3.09401069,29.5313525 1.59340144,29.7497422 0,30 L0,-5.68434189e-14 L4.4690224,-5.68434189e-14 L10.562377,17.0315868 L10.562377,-5.68434189e-14 L15.2497891,-5.68434189e-14 L15.2497891,28.061674 C13.5935889,28.3437998 11.906458,28.4375293 10.1246602,28.6868498 L4.78114163,12.9684132 Z\" id=\"Fill-14\">\r\n                    </path>\r\n                </g>\r\n            </svg>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","// import logo from './logo.svg';\nimport './App.css';\nimport Row from './Row';\nimport Banner from './Banner'\nimport requests from './requests';\n\nimport Nav from './Nav'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      {/* Nav */}\n      <Nav />\n\n      {/* Banner */}\n      <Banner />\n\n      <Row \n      title=\"Netflix Originals\" \n      fetchUrl={requests.fetchNetflixOriginals}\n      isLargeRow ></Row>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTreanding}></Row>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}></Row>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}></Row>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}></Row>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}></Row>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}></Row>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}